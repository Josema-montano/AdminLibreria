using Domain.Interfaces;
using System;
using System.Threading.Tasks;

namespace Aplication.UseCases.Clientes
{
    public class EliminarCliente
    {
        private readonly IClienteRepositorio _clienteRepositorio;

      public EliminarCliente(IClienteRepositorio clienteRepositorio)
        {
     _clienteRepositorio = clienteRepositorio;
        }

 public async Task EjecutarAsync(int clienteId)
        {
   if (clienteId == 0)
       throw new ArgumentException("El ID del cliente es obligatorio.");

            var cliente = await _clienteRepositorio.ObtenerPorIdAsync(clienteId);
   if (cliente is null)
     throw new ArgumentException("El cliente no existe.");

        await _clienteRepositorio.EliminarAsync(clienteId);
        }
    }
}
